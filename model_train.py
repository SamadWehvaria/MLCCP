# -*- coding: utf-8 -*-
"""Model-Train.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1i9WcvQT_62rULri9rLgIcuCXqSXeaWo8
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.preprocessing import MinMaxScaler, LabelEncoder
import joblib


data = pd.read_csv('transformed_traffic_congestion.csv')

weather_fix = {
    '711': 'mist', '201': 'storm', '211': 'storm', '301': 'rain', '502': 'rain', '741': 'fog'
}
data['weather_condition'] = data['weather_condition'].replace(weather_fix)

data = pd.get_dummies(data, columns=['location', 'weather_condition'], drop_first=True)

le = LabelEncoder()
data['congestion_level'] = le.fit_transform(data['congestion_level'])

X = data.drop('congestion_level', axis=1)
y = data['congestion_level']

scaler = MinMaxScaler()
numerical_cols = ['current_speed', 'free_flow_speed', 'incident_count', 'temperature', 'wind_speed']
X[numerical_cols] = scaler.fit_transform(X[numerical_cols])

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

train_score = model.score(X_train, y_train)
test_score = model.score(X_test, y_test)
print(f"Training Accuracy: {train_score:.2f}")
print(f"Testing Accuracy: {test_score:.2f}")

joblib.dump(model, 'congestion_model.pkl')
joblib.dump(scaler, 'scaler.pkl')
joblib.dump(le, 'label_encoder.pkl')